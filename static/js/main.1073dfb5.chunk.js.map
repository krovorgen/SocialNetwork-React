{"version":3,"sources":["components/Dialogs/style.module.scss","components/Users/style.module.scss","components/Posts/style.module.scss","components/NavBar/style.module.scss","components/Button/style.module.scss","components/Header/style.module.scss","components/Preloader/style.module.scss","components/Profile/style.module.scss","images/rocket.png","components/Header/index.tsx","components/NavBar/index.tsx","components/News/index.tsx","components/Profile/index.tsx","components/Music/index.tsx","components/Settings/index.tsx","images/siluet.svg","components/Users/index.tsx","components/Button/index.tsx","components/Posts/index.tsx","components/Preloader/index.tsx","redux/constants/index.ts","components/Dialogs/index.tsx","components/Dialogs/DialogsContainer.tsx","redux/actions/dialogs-action.ts","components/Dialogs/DialogItem/index.tsx","components/Dialogs/MessageItem/index.tsx","components/Profile/ProfileInfo/index.tsx","components/Posts/PostItem/index.tsx","components/Posts/PostsContainer.tsx","redux/actions/profile-action.ts","components/Users/UsersContainer.tsx","redux/actions/users-action.ts","components/Profile/ProfileContainer.tsx","constants/index.ts","App.tsx","redux/reducers/dialogs-reducer.ts","redux/reducers/profile-reducer.ts","redux/reducers/users-reducer.ts","redux/root-reducers.ts","redux/store.ts","index.tsx"],"names":["module","exports","Header","className","styles","width","height","src","logo","alt","menuNavigationMockData","id","v1","iconClass","url","textLink","NavBar","map","item","activeClassName","exact","to","News","Profile","profile","PostsContainer","Music","Settings","Users","totalUsersCount","pageSize","currentPage","users","onUnfollowUser","onFollowUser","onPageChanged","pagesCount","Math","ceil","pages","i","push","index","type","onClick","active","user","photos","small","silhouette","followed","size","name","status","Button","addClass","children","appearancesList","classNames","Posts","postItemData","newPostText","onChangeTextarea","addPost","placeholder","onChange","value","message","likesCount","Preloader","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","UPDATE_NEW_POST_TEXT","ADD_POST","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_LOADING_STATUS","SET_USER_PROFILE","Dialogs","dialogsPage","addMessage","dialogsData","messagesData","newMessageText","DialogsContainer","connect","state","dispatch","e","currentTarget","payload","DialogItem","MessageItem","ProfileInfo","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","href","contacts","github","instagram","vk","twitter","facebook","mainLink","youtube","website","PostItem","SuperPostsContainer","profilePage","UsersAPI","pageNumber","props","toggleStatusLoading","setCurrentPage","axios","get","params","page","count","then","data","setUsers","items","this","setTotalUsersCount","totalCount","isLoading","React","Component","UsersContainer","usersPage","ProfileContainer","userID","match","setUserProfile","WithUrlDataContainerComponent","withRouter","App","path","render","initialState","dialogsReducer","action","newMessage","profileReducer","newPost","usersReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1073dfb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"style_dialogs__qCvoj\",\"dialogs__items\":\"style_dialogs__items__1wzok\",\"dialogs__link\":\"style_dialogs__link__3Cxfk\",\"dialogs__link--active\":\"style_dialogs__link--active__2fSHI\",\"messages\":\"style_messages__sIi40\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__item\":\"style_user__item__30sCI\",\"user__avatar\":\"style_user__avatar__3QnFU\",\"user__ava\":\"style_user__ava__1LYQJ\",\"user-navigation\":\"style_user-navigation__3vcr8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__form\":\"style_posts__form__2dBOn\",\"posts__item\":\"style_posts__item__2LBOa\",\"posts__avatar\":\"style_posts__avatar__VM_3i\",\"posts__likes\":\"style_posts__likes__1KvTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"style_menu__1dsIT\",\"menu__list\":\"style_menu__list__2-lLq\",\"menu__link\":\"style_menu__link__1qZMy\",\"menu__link--active\":\"style_menu__link--active__HoIxb\",\"menu__link--profile\":\"style_menu__link--profile__1eJ-f\",\"menu__link--messages\":\"style_menu__link--messages__2uDhC\",\"menu__link--news\":\"style_menu__link--news__2UhgP\",\"menu__link--music\":\"style_menu__link--music__18alS\",\"menu__link--settings\":\"style_menu__link--settings__TKDbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2tnMZ\",\"button__100\":\"style_button__100__2syVF\",\"button--active\":\"style_button--active__3wFSt\",\"button--navigation\":\"style_button--navigation__222KC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__2rz0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"style_preloader__AusUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__background\":\"style_profile__background__1U9yd\"};","export default __webpack_public_path__ + \"static/media/rocket.ba44f326.png\";","import React, { FC } from 'react';\n\nimport logo from '../../images/rocket.png';\n\nimport styles from './style.module.scss';\n\nconst Header: FC = () => (\n  <header className={`${styles['header']}`}>\n    <img className={styles['header__logo']} width={50} height={50} src={logo} alt=\"logo\" />\n  </header>\n);\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { v1 } from 'uuid';\n\nimport { MenuNavigationMockDataType } from './types';\n\nimport styles from './style.module.scss';\n\nconst menuNavigationMockData: MenuNavigationMockDataType[] = [\n  { id: v1(), iconClass: 'profile', url: '/profile', textLink: 'Profile' },\n  { id: v1(), iconClass: 'messages', url: '/dialogs', textLink: 'Messages' },\n  { id: v1(), iconClass: 'news', url: '/news', textLink: 'News' },\n  { id: v1(), iconClass: 'music', url: '/music', textLink: 'Music' },\n  { id: v1(), iconClass: 'settings', url: '/settings', textLink: 'Settings' },\n  { id: v1(), iconClass: 'settings', url: '/users', textLink: 'Users' },\n];\n\nconst NavBar: FC = () => (\n  <nav className={`${styles['menu']}`}>\n    <ul className=\"menu__list\">\n      {menuNavigationMockData.map((item) => {\n        return (\n          <li key={item.id} className={styles['menu__item']}>\n            <NavLink\n              className={`${styles['menu__link']} ${styles[`menu__link--${item.iconClass}`]}`}\n              activeClassName={styles['menu__link--active']}\n              exact\n              to={`${item.url}`}\n            >\n              {item.textLink}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import React, { FC } from 'react';\n\nconst News: FC = () => <>News</>;\n\nexport default News;\n","import React, { FC } from 'react';\n\nimport { PostsContainer, ProfileInfo } from '../index';\nimport { IProfileProps } from './types';\n\nimport styles from './style.module.scss';\n\nconst Profile: FC<IProfileProps> = ({ profile }) => (\n  <div className={styles['profile']}>\n    <ProfileInfo profile={profile} />\n    <PostsContainer />\n  </div>\n);\n\nexport default Profile;\n","import React, { FC } from 'react';\n\nconst Music: FC = () => <>Music</>;\n\nexport default Music;\n","import React, { FC } from 'react';\n\nconst Settings: FC = () => <>Settings</>;\n\nexport default Settings;\n","export default __webpack_public_path__ + \"static/media/siluet.74c7c662.svg\";","import React, { FC } from 'react';\r\nimport styles from './style.module.scss';\r\nimport { Button } from '../index';\r\nimport silhouette from '../../images/siluet.svg';\r\nimport { IUsersProps } from './types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Users: FC<IUsersProps> = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  users,\r\n  onUnfollowUser,\r\n  onFollowUser,\r\n  onPageChanged,\r\n}) => {\r\n  let pagesCount: number = Math.ceil(totalUsersCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles['user-navigation']}>\r\n        {pages.map((item, index) => (\r\n          <li key={index} className={styles['user-navigation__item']}>\r\n            <Button\r\n              type={'navigation'}\r\n              onClick={() => onPageChanged(item)}\r\n              active={currentPage === item}\r\n            >\r\n              {item}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className={styles['user']}>\r\n        {users.map((user, id) => {\r\n          return (\r\n            <li key={id} className={styles['user__item']}>\r\n              <div className={styles['user__avatar']}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                  <img\r\n                    className={styles['user__ava']}\r\n                    width={150}\r\n                    height={150}\r\n                    src={user.photos.small || silhouette}\r\n                    alt=\"\"\r\n                  />\r\n                </NavLink>\r\n                {user.followed ? (\r\n                  <Button onClick={() => onUnfollowUser(user.id)} size={'full'}>\r\n                    Unfollow\r\n                  </Button>\r\n                ) : (\r\n                  <Button onClick={() => onFollowUser(user.id)} size={'full'}>\r\n                    Follow\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={styles['user__info']}>\r\n                <p className={styles['user__name']}>{user.name}</p>\r\n                <p className={styles['user__status']}>{user.status || 'Empty status'}</p>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { IButtonProps } from './types';\n\nimport styles from './style.module.scss';\n\nconst Button: FC<IButtonProps> = ({ addClass, active, type, children, size, onClick }) => {\n  const appearancesList = {\n    [styles['button__100']]: size === 'full',\n    [styles['button--active']]: active,\n    [styles['button--navigation']]: type === 'navigation',\n  };\n  return (\n    <button\n      className={classNames(styles['button'], addClass, appearancesList)}\n      onClick={onClick}\n      type={'button'}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { FC } from 'react';\r\n\r\nimport { PostsPropsType } from './types';\r\nimport { Button, PostItem } from '../index';\r\n\r\nimport styles from './style.module.scss';\r\n\r\nconst Posts: FC<PostsPropsType> = ({ postItemData, newPostText, onChangeTextarea, addPost }) => (\r\n  <div className={styles['posts']}>\r\n    <div className={styles['posts__form']}>\r\n      <textarea\r\n        className={'form-textarea'}\r\n        placeholder=\"Enter your message\"\r\n        onChange={onChangeTextarea}\r\n        value={newPostText}\r\n      />\r\n      <Button onClick={addPost}>POST</Button>\r\n    </div>\r\n    <ul className={styles['posts__items']}>\r\n      {postItemData &&\r\n        postItemData.map((item) => {\r\n          return (\r\n            <PostItem\r\n              key={item.id}\r\n              id={item.id}\r\n              message={item.message}\r\n              likesCount={item.likesCount}\r\n            />\r\n          );\r\n        })}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Posts;\r\n","import React, { FC } from 'react';\r\n\r\nimport styles from './style.module.scss';\r\n\r\nconst Preloader: FC = () => {\r\n  return (\r\n    <div className={styles['preloader']}>\r\n      <img src={'./images/loader.svg'} alt={'loader'} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","export const ADD_MESSAGE = 'ADD-MESSAGE';\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nexport const ADD_POST = 'ADD-POST';\nexport const FOLLOW = 'FOLLOW';\nexport const UNFOLLOW = 'UNFOLLOW';\nexport const SET_USERS = 'SET_USERS';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\nexport const TOGGLE_LOADING_STATUS = 'TOGGLE_LOADING_STATUS';\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE';\n","import React, { FC } from 'react';\r\n\r\nimport { Button, DialogItem, MessageItem } from '../index';\r\nimport { DialogsPropsType } from './types';\r\n\r\nimport styles from './style.module.scss';\r\n\r\nconst Dialogs: FC<DialogsPropsType> = ({ dialogsPage, addMessage, onChangeTextarea }) => (\r\n  <div className={styles['dialogs']}>\r\n    <ul className={styles['dialogs__items']}>\r\n      {dialogsPage.dialogsData &&\r\n      dialogsPage.dialogsData.map((item) => (\r\n        <DialogItem key={item.id} name={item.name} id={item.id} />\r\n      ))}\r\n    </ul>\r\n    <ul className={styles['messages']}>\r\n      {dialogsPage.messagesData &&\r\n      dialogsPage.messagesData.map((item) => (\r\n        <MessageItem key={item.id} id={item.id} message={item.message} />\r\n      ))}\r\n      <textarea\r\n        className={'form-textarea'}\r\n        onChange={onChangeTextarea}\r\n        placeholder=\"Enter your message\"\r\n        value={dialogsPage.newMessageText}\r\n      />\r\n      <Button onClick={addMessage}>Send</Button>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Dialogs;\r\n","import { ChangeEvent } from 'react';\r\n\r\nimport { addMessageAC, updateNewMessageTextAC } from '../../redux/actions/dialogs-action';\r\nimport Dialogs from './index';\r\nimport { connect } from 'react-redux';\r\nimport { RootStateType } from '../../redux/store.type';\r\nimport { DialogsActionType } from '../../redux/actions/types/dialogs.type';\r\nimport { MapDispatchPropsType, MapStatePropsType } from './types';\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => ({\r\n  dialogsPage: state.dialogsPage,\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch: (arg0: DialogsActionType) => void): MapDispatchPropsType => ({\r\n  addMessage: () => {\r\n    dispatch(addMessageAC());\r\n  },\r\n  onChangeTextarea: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch(updateNewMessageTextAC(e.currentTarget.value));\r\n  },\r\n});\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","import { ADD_MESSAGE, UPDATE_NEW_MESSAGE_TEXT } from '../constants';\nimport { AddMessageActionType, UpdateNewMessageTextActionType } from './types/dialogs.type';\n\nexport const addMessageAC = (): AddMessageActionType => ({\n  type: ADD_MESSAGE,\n});\n\nexport const updateNewMessageTextAC = (newMessageText: string): UpdateNewMessageTextActionType => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  payload: newMessageText,\n});\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { DialogsDataType } from '../../../redux/reducers/types';\n\nimport styles from '../style.module.scss';\n\nconst DialogItem: FC<DialogsDataType> = ({ id, name }) => (\n  <li className={styles['dialogs__item']}>\n    <NavLink\n      className={styles['dialogs__link']}\n      activeClassName={styles['dialogs__link--active']}\n      to={`/dialogs/${id}`}\n    >\n      {name}\n    </NavLink>\n  </li>\n);\n\nexport default DialogItem;\n","import React, { FC } from 'react';\n\nimport { MessagesDataType } from '../../../redux/reducers/types';\n\nimport styles from '../style.module.scss';\n\nconst MessageItem: FC<MessagesDataType> = ({ id, message }) => (\n  <li className={styles['messages__item']}>{message}</li>\n);\n\nexport default MessageItem;\n","import React, { FC } from 'react';\n\nimport { IProfileInfoProps } from '../types';\nimport { Preloader } from '../../index';\n\nimport styles from '../style.module.scss';\n\nconst ProfileInfo: FC<IProfileInfoProps> = ({ profile }) => {\n  return (\n    <>\n      {!profile ? (\n        <Preloader />\n      ) : (\n        <div className={styles['profile__inner']}>\n          <div className={styles['profile__background']}>\n            <img src=\"./images/user-bg.jpg\" alt=\"background\" />\n          </div>\n          <div className={styles['profile__wrap']}>\n            <div className={styles['profile__avatar']}>\n              <img src={profile?.photos.small} alt={profile?.fullName} />\n            </div>\n            <div className={styles['profile__info']}>\n              <p className={styles['profile__name']}>{profile.fullName}</p>\n              <p className={styles['profile__status']}>{profile.aboutMe}</p>\n              <div className={styles['profile__job']}>\n                Job:\n                <p>{profile.lookingForAJob ? 'В поисках работы' : 'Не ищу работу'}</p>\n                <p>{profile.lookingForAJobDescription}</p>\n              </div>\n            </div>\n            <ul className={styles['profile__links']}>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.github} className=\"profile__contact\">\n                  {profile.contacts.github}\n                </a>\n                {profile.contacts.github}\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.instagram} className=\"profile__contact\">\n                  {profile.contacts.instagram}\n                </a>\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.vk} className=\"profile__contact\">\n                  {profile.contacts.vk}\n                </a>\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.twitter} className=\"profile__contact\">\n                  {profile.contacts.twitter}\n                </a>\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.facebook} className=\"profile__contact\">\n                  {profile.contacts.facebook}\n                </a>\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.mainLink} className=\"profile__contact\">\n                  {profile.contacts.mainLink}\n                </a>\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.youtube} className=\"profile__contact\">\n                  {profile.contacts.youtube}\n                </a>\n              </li>\n              <li className={styles['profile__link']}>\n                <a href={profile.contacts.website} className=\"profile__contact\">\n                  {profile.contacts.website}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","import React, { FC } from 'react';\r\n\r\nimport { PostItemType } from '../../../redux/reducers/types';\r\n\r\nimport styles from '../style.module.scss';\r\n\r\nconst PostItem: FC<PostItemType> = ({ message, likesCount, id }) => (\r\n  <li className={styles['posts__item']}>\r\n    <img\r\n      className={styles['posts__avatar']}\r\n      width={50}\r\n      height={50}\r\n      src=\"./images/avatar.png\"\r\n      alt=\"avatar\"\r\n    />\r\n    {message}\r\n    <span className={styles['posts__likes']}>Likes: {likesCount}</span>\r\n  </li>\r\n);\r\n\r\nexport default PostItem;\r\n","import { ChangeEvent } from 'react';\n\nimport { addPostAC, updateNewPostTextAC } from '../../redux/actions/profile-action';\nimport { connect } from 'react-redux';\nimport { RootStateType } from '../../redux/store.type';\nimport { ProfileActionType } from '../../redux/actions/types/profile.type';\nimport { Posts } from '../index';\nimport { MapDispatchPropsType, MapStatePropsType } from './types';\n\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => ({\n  postItemData: state.profilePage.postItemData,\n  newPostText: state.profilePage.newPostText,\n});\n\nconst mapDispatchToProps = (dispatch: (arg0: ProfileActionType) => void): MapDispatchPropsType => {\n  return {\n    addPost: () => dispatch(addPostAC()),\n    onChangeTextarea: (e: ChangeEvent<HTMLTextAreaElement>) => {\n      dispatch(updateNewPostTextAC(e.currentTarget.value));\n    },\n  };\n};\n\nconst SuperPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default SuperPostsContainer;\n","import { ADD_POST, SET_USER_PROFILE, UPDATE_NEW_POST_TEXT } from '../constants';\nimport {\n  AddPostActionType,\n  SetUserProfileActionType,\n  UpdateNewPostTextActionType,\n} from './types/profile.type';\nimport { UserProfileType } from '../reducers/types';\n\nexport const addPostAC = (): AddPostActionType => ({\n  type: ADD_POST,\n});\n\nexport const updateNewPostTextAC = (newPostText: string): UpdateNewPostTextActionType => ({\n  type: UPDATE_NEW_POST_TEXT,\n  payload: newPostText,\n});\n\nexport const setUserProfile = (profile: UserProfileType): SetUserProfileActionType => ({\n  type: SET_USER_PROFILE,\n  payload: profile,\n});\n","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport { RootStateType } from '../../redux/store.type';\nimport {\n  onFollowUser,\n  onUnfollowUser,\n  setCurrentPage,\n  setTotalUsersCount,\n  setUsers,\n  toggleStatusLoading,\n} from '../../redux/actions/users-action';\nimport { MapStatePropsType, UsersAPIPropsType } from './types';\nimport Users from './index';\nimport { Preloader } from '../index';\n\nclass UsersAPI extends React.Component<UsersAPIPropsType> {\n  componentDidMount() {\n    axios\n      .get('https://social-network.samuraijs.com/api/1.0/users/', {\n        params: {\n          page: this.props.currentPage,\n          count: this.props.pageSize,\n        },\n      })\n      .then(({ data }) => {\n        this.props.setUsers(data.items);\n        this.props.setTotalUsersCount(data.totalCount);\n        this.props.toggleStatusLoading(false);\n      });\n  }\n\n  onPageChanged = (pageNumber: number) => {\n    this.props.toggleStatusLoading(true);\n    this.props.setCurrentPage(pageNumber);\n    axios\n      .get('https://social-network.samuraijs.com/api/1.0/users/', {\n        params: {\n          page: pageNumber,\n          count: this.props.pageSize,\n        },\n      })\n      .then(({ data }) => {\n        this.props.setUsers(data.items);\n        this.props.toggleStatusLoading(false);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isLoading ? (\n          <Preloader />\n        ) : (\n          <Users {...this.props} onPageChanged={this.onPageChanged} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootStateType): MapStatePropsType => ({\n  users: state.usersPage.users,\n  pageSize: state.usersPage.pageSize,\n  totalUsersCount: state.usersPage.totalUsersCount,\n  currentPage: state.usersPage.currentPage,\n  isLoading: state.usersPage.isLoading,\n});\n\nconst UsersContainer = connect(mapStateToProps, {\n  onFollowUser,\n  onUnfollowUser,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleStatusLoading,\n})(UsersAPI);\n\nexport default UsersContainer;\n","import {\r\n  FOLLOW,\r\n  SET_CURRENT_PAGE,\r\n  SET_TOTAL_USER_COUNT,\r\n  SET_USERS,\r\n  TOGGLE_LOADING_STATUS,\r\n  UNFOLLOW,\r\n} from '../constants';\r\nimport {\r\n  FollowActionType,\r\n  SetCurrentPageActionType,\r\n  SetTotalUsersCountActionType,\r\n  SetUsersActionType,\r\n  ToggleStatusLoadingActionType,\r\n  UnfollowActionType,\r\n} from './types/users.type';\r\nimport { UsersDataType } from '../reducers/types';\r\n\r\nexport const onFollowUser = (id: string): FollowActionType => ({\r\n  type: FOLLOW,\r\n  payload: id,\r\n});\r\n\r\nexport const onUnfollowUser = (id: string): UnfollowActionType => ({\r\n  type: UNFOLLOW,\r\n  payload: id,\r\n});\r\n\r\nexport const setUsers = (users: UsersDataType[]): SetUsersActionType => ({\r\n  type: SET_USERS,\r\n  payload: users,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  payload: currentPage,\r\n});\r\n\r\nexport const setTotalUsersCount = (value: number): SetTotalUsersCountActionType => ({\r\n  type: SET_TOTAL_USER_COUNT,\r\n  payload: value,\r\n});\r\n\r\nexport const toggleStatusLoading = (status: boolean): ToggleStatusLoadingActionType => ({\r\n  type: TOGGLE_LOADING_STATUS,\r\n  payload: status,\r\n});\r\n","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport Profile from './index';\nimport { API_URL } from '../../constants';\nimport { setUserProfile } from '../../redux/actions/profile-action';\nimport { RootStateType } from '../../redux/store.type';\nimport { UserProfileType } from '../../redux/reducers/types';\nimport { withRouter } from 'react-router-dom';\nimport { IProfileContainerPropsType } from './types';\n\nclass ProfileContainer extends React.Component<IProfileContainerPropsType> {\n  componentDidMount() {\n    let userID = this.props.match.params.userID;\n    axios.get<UserProfileType>(`${API_URL}profile/${userID ? userID : '2'}`).then(({ data }) => {\n      this.props.setUserProfile(data);\n    });\n  }\n\n  render() {\n    return <Profile profile={this.props.profile} />;\n  }\n}\n\nlet mapStateToProps = (state: RootStateType) => ({\n  profile: state.profilePage.profile,\n});\n\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\n\nexport default connect(mapStateToProps, { setUserProfile })(WithUrlDataContainerComponent);\n","export const API_URL: string = 'https://social-network.samuraijs.com/api/1.0/';\r\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport {\n  DialogsContainer,\n  Header,\n  Music,\n  NavBar,\n  News,\n  Settings,\n  UsersContainer,\n} from './components';\nimport { IAppProps } from './types';\nimport ProfileContainer from './components/Profile/ProfileContainer';\n\nconst App: FC<IAppProps> = () => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <main className=\"main\">\n        <NavBar />\n        <div className=\"content\">\n          <Route path=\"/profile/:userID?\" render={() => <ProfileContainer />} />\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n          <Route path=\"/users\" exact render={() => <UsersContainer />} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { v1 } from 'uuid';\nimport { ADD_MESSAGE, UPDATE_NEW_MESSAGE_TEXT } from '../constants';\nimport { DialogsStateType } from './types';\nimport { DialogsActionType } from '../actions/types/dialogs.type';\n\nconst initialState: DialogsStateType = {\n  messagesData: [],\n  dialogsData: [\n    { id: v1(), name: 'TEST USER' },\n    { id: v1(), name: 'TEST USER' },\n    { id: v1(), name: 'TEST USER' },\n  ],\n  newMessageText: '',\n};\n\nconst dialogsReducer = (state = initialState, action: DialogsActionType): DialogsStateType => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newMessage = {\n        id: v1(),\n        message: state.newMessageText,\n      };\n      return {\n        ...state,\n        messagesData: [...state.messagesData, newMessage],\n        newMessageText: '',\n      };\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return {\n        ...state,\n        newMessageText: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dialogsReducer;\n","import { v1 } from 'uuid';\nimport { ADD_POST, SET_USER_PROFILE, UPDATE_NEW_POST_TEXT } from '../constants';\nimport { ProfileStateType } from './types';\nimport { ProfileActionType } from '../actions/types/profile.type';\n\nconst initialState: ProfileStateType = {\n  postItemData: [],\n  newPostText: '',\n  profile: null,\n};\n\nconst profileReducer = (state = initialState, action: ProfileActionType): ProfileStateType => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: v1(),\n        message: state.newPostText,\n        likesCount: 1,\n      };\n      return {\n        ...state,\n        postItemData: [...state.postItemData, newPost],\n        newPostText: '',\n      };\n    case UPDATE_NEW_POST_TEXT:\n      return {\n        ...state,\n        newPostText: action.payload,\n      };\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\n","import { UsersStateType } from './types';\r\nimport { UsersActionType } from '../actions/types/users.type';\r\nimport {\r\n  FOLLOW,\r\n  SET_CURRENT_PAGE,\r\n  SET_TOTAL_USER_COUNT,\r\n  SET_USERS,\r\n  TOGGLE_LOADING_STATUS,\r\n  UNFOLLOW,\r\n} from '../constants';\r\n\r\nconst initialState: UsersStateType = {\r\n  users: [],\r\n  pageSize: 100,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isLoading: true,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action: UsersActionType) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((item) =>\r\n          item.id === action.payload ? { ...item, followed: true } : item\r\n        ),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((item) =>\r\n          item.id === action.payload ? { ...item, followed: false } : item\r\n        ),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.payload],\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload,\r\n      };\r\n    case SET_TOTAL_USER_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.payload,\r\n      };\r\n    case TOGGLE_LOADING_STATUS:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from 'redux';\nimport dialogsReducer from './reducers/dialogs-reducer';\nimport profileReducer from './reducers/profile-reducer';\nimport usersReducer from './reducers/users-reducer';\n\nconst rootReducer = combineReducers({\n  dialogsPage: dialogsReducer,\n  profilePage: profileReducer,\n  usersPage: usersReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './root-reducers';\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport './scss/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}